Lab 3
=====

In this lab, you will create a version of Lab 2's byte calculator that
will allow you to step through commands one at a time.

In order to do this, you will need to store commands in memory, rather
than reading them one at a time:

 * Create a struct to hold a command, its argument, and its line number
   (the first command will be line 1, the second will be line 2, and
   so on).

 * Create an array of structs to hold several statements as a calculator
   program.

 * Use the C initializer syntax [Modern C, Level 1, Sections 2.3 and 6.3]
   [1] to hard-code the array of structs to hold the calculator program
   from lab2.input, rather than reading commands with scanf().

  [1]: http://icube-icps.unistra.fr/img_auth.php/d/db/ModernC.pdf

Now, instead of using scanf() to read calculator commands, your program
should use scanf() to read commands describing what to do with the
calculator program you've created and stored:

| Command | Action                                            |
| ------- | ------------------------------------------------- |
| step    | Execute the next calculator command               |
| run     | Execute the rest of the calculator commands       |
| print   | Print the current byte value                      |
| list    | Print the current, previous, and next commands    |

Note that in order to keep track of which calculator command to execute
next, you will need to keep track of where you are in the array.

